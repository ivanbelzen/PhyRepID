'''
PhyRepId pipeline
May 2018 

First run Data collection Snakefile for dicts of selected orthologuous groups
- genes_to_genetrees_file  - dict from retrieve_genetrees.py

Mapping and paths defined in pipeline methods
'''

import pipeline_methods as pre

#Determine output file list
og_id_list = [] #genetree_gene

with open(pre.genes_to_genetrees_file,'r') as g2gt:
	g2gt_mapping = json.load(g2gt)
og_id_list = [y+"_"+x for x,y in g2gt_mapping.items()]
		
rule all:
	input: 
		expand(pre.fasta_path+"{og_id}.fa", og_id=og_id_list),
		expand(pre.genetree_path+"{og_id}.nhx", og_id=og_id_list),
		expand(pre.fasta_path+"{og_id}.fa", og_id=og_id_list),
		expand(pre.genetree_path+"{og_id}.nhx", og_id=og_id_list),
		expand(pre.progress_path+"{og_id}.pfamhmm.done", og_id=og_id_list)
		
rule parse_genetrees:
	input:
		pre.genes_to_genetrees_file,
		pre.ensembl_path+"{gene_id}.json"
	output:
		pre.fasta_path+"{genetree}_{gene_id}.fa",
		pre.genetree_path+"{genetree}_{gene_id}.nhx"
	shell:
		'python parse_genetree.py {input}' 

rule hmmpress:
	input: pre.pfam_file
	output: pre.pfam_file+'.h3i'
	shell: 'hmmpress '+pre.pfam_file

rule pfam_hmmscan:
	input: 
		pre.fasta_path+"{og_id}.fa"
	output:
		pre.pfam_hmm_path+"{og_id}.tblout"
	shell: 
		'hmmscan -T 12.5 --domT 0 --domtblout {output} '+pre.pfam_file+' {input} &>/dev/null'

rule repeat_detection_iteration:
	input:
		pre.pfam_file+'.h3i',
		pre.pfam_hmm_path+"{og_id}.tblout"
	output: 
		pre.progress_path+"{og_id}.pfamhmm.done"
	shell: 
		'bash run_pfam_iteration_single.bash {input}' 

